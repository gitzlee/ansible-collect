---
# ANSIBLE_HOST_KEY_CHECKING=False  ansible-playbook -i hosts rke-cleanup.yml -vv
- name: rke clean
  hosts: k8s
  gather_facts: no
  become: yes
  become_user: root
  become_method: sudo

  vars:
    rke_user: jkstack
    rke_controller_node: localhost

  tasks:
    - name: Run rke remove
      become: yes
      become_user: "{{ rke_user }}"
      shell: |
        set -eo pipefail
        /usr/local/bin/rke remove --force | tee /tmp/rke-remove.log
      args:
        executable: /bin/bash
        chdir: "/home/{{ rke_user }}/rke"
      changed_when: False
      run_once: True
      delegate_to: "{{ rke_controller_node }}"

    - name: Prune running containers
      shell: |
        docker rm -f $(docker ps -qa)
        #docker rmi -f $(docker images -q)
        docker volume rm $(docker volume ls -q)
      args:
        executable: /bin/bash
      changed_when: False
      ignore_errors: yes

    - name: Unmount all mounts which been left behind by rke
      shell: |
        set -o pipefail
        for mount in $(mount | grep tmpfs | grep '/var/lib/kubelet' | awk '{ print $3 }') /var/lib/kubelet /var/lib/rancher; do umount $mount; done
      args:
        executable: /bin/bash
      changed_when: False
      ignore_errors: yes

    - name: Clean each host from the directories left by rke
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - /etc/ceph
        - /etc/cni
        - /etc/kubernetes
        - /opt/cni
        - /opt/rke
        - /run/secrets/kubernetes.io
        - /run/calico
        - /run/flannel
        - /var/lib/calico
        - /var/lib/etcd
        - /var/lib/cni
        - /var/lib/kubelet
        - /var/lib/rancher/rke/log
        - /var/log/containers
        - /var/log/kube-audit
        - /var/log/pods
        - /var/run/calico

    - name: Remove rke user
      user:
        name: "{{ rke_user }}"
        state: absent
        remove: yes
        force: True

    - name: Reboot the machine to relase iptables rules created by rke
      reboot:
        reboot_timeout: 300
        